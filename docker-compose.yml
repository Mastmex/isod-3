services:
  
  producer1:
    container_name: producer-1
    build:
      context: ./producer-1
    depends_on:
      - rabbitmq
    ports:
    - 8010:8010
    networks:
      - network

  producer2:
    container_name: producer-2
    build:
      context: ./producer-2
    depends_on:
      - rabbitmq
    ports:
    - 8012:8012
    networks:
      - network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: my-rabbit
    ports:
      - "5672:5672"       # AMQP
      - "15672:15672"     # Management UI
      - "8080:8080"       # HTTP (если используется)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: "sdfwefgsrRdsFSDF3rsdfSDF345fsSDF"
    networks:
      - network

  consumer:
    container_name: consumer
    build:
      context: ./consumer
    depends_on:
      - rabbitmq
      - mysql
    ports:
    - 8011:8011
    networks:
      - network

  mysql:
    container_name: my-mysql
    build:
      context: ./mysql
    environment:
      MYSQL_ROOT_PASSWORD: "jdui8932erhfASDgsn7823"
      MYSQL_DATABASE: STOCKS
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - network

  plotter:
    container_name: plotter
    build:
      context: ./plotter
    depends_on:
      - mysql
    ports:
    - 8013:8013
    networks:
      - network

networks:
  network: {}

volumes:
  mysql_data:
    driver: local 
